# =========================================================================
#     This makefile was created by Matt Brown, Feb 2010
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

#  
AR ?= ar

#  
RANLIB ?= ranlib

# Compiler flags to link shared library 
LINK_DLL_FLAGS ?= -shared

# Standard flags for C++ 
CXXFLAGS ?= 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS ?= 

# Standard linker flags 
LDFLAGS ?= 

# Set to 1 to build debug version [0,1]
DEBUG ?= 0


# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

CPPDEPS = -MT$@ -MF`echo $@ | sed -e 's,\.o$$,.d,'` -MD -MP
CTB_LIB_CXXFLAGS = $(____DEBUG) $(____DEBUG_1) -D_THREAD_SAFE -pthread \
	$(__OPTIMIZE_FLAG) -I./include $(CPPFLAGS) $(CXXFLAGS)
CTB_LIB_OBJECTS =  \
	$(LIB)/ctb_lib_fifo.o \
	$(LIB)/ctb_lib_serportx.o \
	$(LIB)/ctb_lib_serport.o 
CTB_DLL_CXXFLAGS = $(____DEBUG) $(____DEBUG_1) -D_THREAD_SAFE -pthread \
	$(__OPTIMIZE_FLAG) -I./include -fPIC -DPIC $(CPPFLAGS) $(CXXFLAGS)
CTB_DLL_OBJECTS =  \
	$(LIB)/ctb_dll_fifo.o \
	$(LIB)/ctb_dll_serportx.o \
	$(LIB)/ctb_dll_serport.o 
#CTBTEST_CXXFLAGS = $(____DEBUG) $(____DEBUG_1) -D_THREAD_SAFE \
#	-pthread $(__OPTIMIZE_FLAG) -I./include $(CPPFLAGS) $(CXXFLAGS)
#CTBTEST_OBJECTS =  \
#	$(OUTPUT)/ctbtest_ctbtest.o

### Conditionally set variables: ###

LIB = ./lib
ifeq ($(DEBUG),0)
OUTPUT = release
endif
ifeq ($(DEBUG),1)
OUTPUT = debug
endif
ifeq ($(DEBUG),1)
LIBFLAG = d
endif
ifeq ($(DEBUG),0)
____DEBUG = -DNDEBUG
endif
ifeq ($(DEBUG),1)
____DEBUG = 
endif
ifeq ($(DEBUG),0)
__OPTIMIZE_FLAG = -O0
endif
ifeq ($(DEBUG),1)
__OPTIMIZE_FLAG = -O2
endif
ifeq ($(DEBUG),0)
____DEBUG_1 = 
endif
ifeq ($(DEBUG),1)
____DEBUG_1 = -g
endif


all: $(OUTPUT)
$(OUTPUT):
	@mkdir -p $(OUTPUT)

### Targets: ###

all: ./lib/libctb.a ./lib/libctb.so

clean: 
	rm -f $(LIB)/*.o
	rm -f $(LIB)/*.d
	rm -f $(LIB)/libctb.a
	rm -f $(LIB)/libctb.so
	rm -f $(OUTPUT)/ctbtest

$(LIB)/libctb.a: $(CTB_LIB_OBJECTS)
	rm -f $@
	$(AR) rcu $@ $(CTB_LIB_OBJECTS)
	$(RANLIB) $@

$(LIB)/libctb.so: $(CTB_DLL_OBJECTS)
	./g++.sh $(LINK_DLL_FLAGS) -fPIC -o $@ $(CTB_DLL_OBJECTS)  $(____DEBUG_1) -pthread -L./lib $(LDFLAGS)  -lpthread

#$(OUTPUT)/ctbtest: $(CTBTEST_OBJECTS) $(LIB)/libctb.a
#	./g++.sh -o $@ $(CTBTEST_OBJECTS)  $(____DEBUG_1) -pthread -L$(LIB) $(LDFLAGS)  $(LIB)/libctb.a -lpthread 

$(LIB)/ctb_lib_fifo.o: ./fifo.cpp ./fifo.h
	./g++.sh -c -o $@ $(CTB_LIB_CXXFLAGS) $(CPPDEPS) $<

$(LIB)/ctb_lib_serportx.o: ./serportx.cpp ./serportx.h ./fifo.h
	./g++.sh -c -o $@ $(CTB_LIB_CXXFLAGS) $(CPPDEPS) $<

$(LIB)/ctb_lib_serport.o: ./linux/serport.cpp ./linux/serport.h
	./g++.sh -c -o $@ $(CTB_LIB_CXXFLAGS) $(CPPDEPS) $<

$(LIB)/ctb_dll_fifo.o: ./fifo.cpp ./fifo.h
	./g++.sh -c -o $@ $(CTB_DLL_CXXFLAGS) $(CPPDEPS) $<

$(LIB)/ctb_dll_serportx.o: ./serportx.cpp ./serportx.h
	./g++.sh -c -o $@ $(CTB_DLL_CXXFLAGS) $(CPPDEPS) $<

$(LIB)/ctb_dll_serport.o: ./linux/serport.cpp ./linux/serport.h
	./g++.sh -c -o $@ $(CTB_DLL_CXXFLAGS) $(CPPDEPS) $<

#$(OUTPUT)/ctbtest_ctbtest.o: ./../samples/ctbtest.cpp
#	./g++.sh -c -o $@ $(CTBTEST_CXXFLAGS) $(CPPDEPS) $<

.PHONY: all install uninstall clean install_ctb_lib uninstall_ctb_lib \
	install_ctb_dll uninstall_ctb_dll


# Dependencies tracking:
-include $(OUTPUT)/*.d

