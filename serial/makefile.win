# =========================================================================
#     makefile for xLights version of CTB serial library
#     Windows version
# =========================================================================

# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# Compiler flags to link shared library 
LINK_DLL_FLAGS ?= -shared

# Standard flags for C++ 
CXXFLAGS ?= 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS ?= 

# Standard linker flags 
LDFLAGS ?= 

# Set to 1 to build debug version [0,1]
DEBUG ?= 0


# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

CPPDEPS = -MT$@ -MF$@.d -MD -MP
CTB_LIB_CXXFLAGS = $(____DEBUG) $(____DEBUG_1) -mthreads $(__OPTIMIZE_FLAG) \
	-I..\include $(CPPFLAGS) $(CXXFLAGS)
CTB_LIB_OBJECTS =  \
	$(OUTPUT)\ctb_lib_fifo.o \
	$(OUTPUT)\ctb_lib_serportx.o \
	$(OUTPUT)\ctb_lib_serport.o
CTB_DLL_CXXFLAGS = $(____DEBUG) $(____DEBUG_1) -mthreads $(__OPTIMIZE_FLAG) \
	-I..\include $(CPPFLAGS) $(CXXFLAGS)
CTB_DLL_OBJECTS =  \
	$(OUTPUT)\ctb_dll_fifo.o \
	$(OUTPUT)\ctb_dll_serportx.o \
	$(OUTPUT)\ctb_dll_serport.o
CTBTEST_CXXFLAGS = $(____DEBUG) $(____DEBUG_1) -mthreads \
	$(__OPTIMIZE_FLAG) $(CPPFLAGS) $(CXXFLAGS)
CTBTEST_OBJECTS =  \
	$(OUTPUT)\ctbtest_ctbtest.o

### Conditionally set variables: ###

ifeq ($(DEBUG),0)
OUTPUT = release
endif
ifeq ($(DEBUG),1)
OUTPUT = debug
endif
ifeq ($(DEBUG),1)
LIBFLAG = d
endif
ifeq ($(DEBUG),0)
____DEBUG = -DNDEBUG
endif
ifeq ($(DEBUG),1)
____DEBUG = 
endif
ifeq ($(DEBUG),0)
__OPTIMIZE_FLAG = -O0
endif
ifeq ($(DEBUG),1)
__OPTIMIZE_FLAG = -O2
endif
ifeq ($(DEBUG),0)
____DEBUG_1 = 
endif
ifeq ($(DEBUG),1)
____DEBUG_1 = -g
endif


all: $(OUTPUT)
$(OUTPUT):
	-if not exist $(OUTPUT) mkdir $(OUTPUT)

### Targets: ###

all: ..\bin\libctb$(LIBFLAG).a ..\bin\ctb$(LIBFLAG).dll

clean: 
	-if exist $(OUTPUT)\*.o del $(OUTPUT)\*.o
	-if exist $(OUTPUT)\*.d del $(OUTPUT)\*.d
	-if exist ..\bin\libctb$(LIBFLAG).a del ..\bin\libctb$(LIBFLAG).a
	-if exist ..\bin\ctb$(LIBFLAG).dll del ..\bin\ctb$(LIBFLAG).dll
	-if exist ..\bin\libctb$(LIBFLAG).a del ..\bin\libctb$(LIBFLAG).a

..\bin\libctb$(LIBFLAG).a: $(CTB_LIB_OBJECTS)
	if exist $@ del $@
	ar rcu $@ $(CTB_LIB_OBJECTS)
	ranlib $@

..\bin\ctb$(LIBFLAG).dll: $(CTB_DLL_OBJECTS)
	g++ $(LINK_DLL_FLAGS) -fPIC -o $@ $(CTB_DLL_OBJECTS)  $(____DEBUG_1) -mthreads -Wl,--out-implib=..\bin\libctb$(LIBFLAG).a -L..\bin $(LDFLAGS)  -lwinmm $(__SYSLIB2_p)

$(OUTPUT)\ctb_lib_fifo.o: ./fifo.cpp
	g++ -c -o $@ $(CTB_LIB_CXXFLAGS) $(CPPDEPS) $<

$(OUTPUT)\ctb_lib_serportx.o: ./serportx.cpp
	g++ -c -o $@ $(CTB_LIB_CXXFLAGS) $(CPPDEPS) $<

$(OUTPUT)\ctb_lib_serport.o: ./win32/serport.cpp
	g++ -c -o $@ $(CTB_LIB_CXXFLAGS) $(CPPDEPS) $<

$(OUTPUT)\ctb_dll_fifo.o: ./fifo.cpp
	g++ -c -o $@ $(CTB_DLL_CXXFLAGS) $(CPPDEPS) $<

$(OUTPUT)\ctb_dll_serportx.o: ./serportx.cpp
	g++ -c -o $@ $(CTB_DLL_CXXFLAGS) $(CPPDEPS) $<

$(OUTPUT)\ctb_dll_serport.o: ./win32/serport.cpp
	g++ -c -o $@ $(CTB_DLL_CXXFLAGS) $(CPPDEPS) $<

.PHONY: all clean


SHELL := $(COMSPEC)

# Dependencies tracking:
-include $(OUTPUT)/*.d
